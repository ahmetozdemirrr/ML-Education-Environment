services:

  ###############################
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./project_datasets/datasets:/app/mounted_datasets
      - ./cache_data:/app/cache_data
    environment:
      - PYTHONUNBUFFERED=1
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    env_file:
      - .env
    networks:
      - default
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "generativelanguage.googleapis.com:142.250.184.138"
  ###############################

  ###############################
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    user: "node" 
  ###############################
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - "4040:4040"  # ngrok web interface
    depends_on:
      - frontend
      - backend

networks:
  default:
    driver: bridge

